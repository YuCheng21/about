{"version":3,"file":"js/main.9898e3a0c6ad4451894b.js","mappings":"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","sources":["webpack://about/./node_modules/@iconify/iconify/dist/iconify.mjs","webpack://about/./resources/js/main.js"],"sourcesContent":["/**\n* (c) Iconify\n*\n* For the full copyright and license information, please view the license.txt or license.gpl.txt\n* files at https://github.com/iconify/iconify\n*\n* Licensed under Apache 2.0 or GPL 2.0 at your option.\n* If derivative product is not compatible with one of licenses, you can pick one of licenses.\n*\n* @license Apache 2.0\n* @license GPL 2.0\n* @version 2.2.1\n*/\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    const aliases = data.aliases;\n    if (aliases && aliases[name2] !== void 0) {\n      const item = aliases[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    const chars = data.chars;\n    if (!iteration && chars && chars[name2] !== void 0) {\n      return getIcon(chars[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\nconst optionalProperties = {\n  provider: \"string\",\n  aliases: \"object\",\n  not_found: \"object\"\n};\nfor (const prop in iconDefaults) {\n  optionalProperties[prop] = typeof iconDefaults[prop];\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  for (const prop in optionalProperties) {\n    if (obj[prop] !== void 0 && typeof obj[prop] !== optionalProperties[prop]) {\n      return null;\n    }\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchName) || typeof icon.body !== \"string\") {\n      return null;\n    }\n    for (const prop in iconDefaults) {\n      if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n        return null;\n      }\n    }\n  }\n  const aliases = data.aliases;\n  if (aliases) {\n    for (const name in aliases) {\n      const icon = aliases[name];\n      const parent = icon.parent;\n      if (!name.match(matchName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent]) {\n        return null;\n      }\n      for (const prop in iconDefaults) {\n        if (icon[prop] !== void 0 && typeof icon[prop] !== typeof iconDefaults[prop]) {\n          return null;\n        }\n      }\n    }\n  }\n  return data;\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */ Object.create(null);\ntry {\n  const w = window || self;\n  if (w && w._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {\n  }\n}\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nconst cache = {};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */ Object.create(null);\nconst pendingUpdates = /* @__PURE__ */ Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = /* @__PURE__ */ Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nfunction emptyCallback() {\n}\nconst pendingIcons = /* @__PURE__ */ Object.create(null);\nconst iconsToLoad = /* @__PURE__ */ Object.create(null);\nconst loaderFlags = /* @__PURE__ */ Object.create(null);\nconst queueFlags = /* @__PURE__ */ Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nconst errorsCache = /* @__PURE__ */ Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nconst isPending = (icon) => {\n  const provider = icon.provider;\n  const prefix = icon.prefix;\n  return pendingIcons[provider] && pendingIcons[provider][prefix] && pendingIcons[provider][prefix][icon.name] !== void 0;\n};\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */ Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\n/**\n * Names of properties to add to nodes\n */\nconst elementFinderProperty = ('iconifyFinder' + Date.now());\nconst elementDataProperty = ('iconifyData' + Date.now());\n\n/**\n * Replace element with SVG\n */\nfunction renderIconInPlaceholder(placeholder, customisations, iconData, returnString) {\n    // Create placeholder. Why placeholder? IE11 doesn't support innerHTML method on SVG.\n    let span;\n    try {\n        span = document.createElement('span');\n    }\n    catch (err) {\n        return returnString ? '' : null;\n    }\n    const data = iconToSVG(iconData, mergeCustomisations(defaults, customisations));\n    // Placeholder properties\n    const placeholderElement = placeholder.element;\n    const finder = placeholder.finder;\n    const name = placeholder.name;\n    // Get class name\n    const placeholderClassName = placeholderElement\n        ? placeholderElement.getAttribute('class')\n        : '';\n    const filteredClassList = finder\n        ? finder.classFilter(placeholderClassName ? placeholderClassName.split(/\\s+/) : [])\n        : [];\n    const className = 'iconify iconify--' +\n        name.prefix +\n        (name.provider === '' ? '' : ' iconify--' + name.provider) +\n        (filteredClassList.length ? ' ' + filteredClassList.join(' ') : '');\n    // Generate SVG as string\n    const html = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"' +\n        className +\n        '\">' +\n        replaceIDs(data.body) +\n        '</svg>';\n    // Set HTML for placeholder\n    span.innerHTML = html;\n    // Get SVG element\n    const svg = span.childNodes[0];\n    const svgStyle = svg.style;\n    // Add attributes\n    const svgAttributes = data.attributes;\n    Object.keys(svgAttributes).forEach((attr) => {\n        svg.setAttribute(attr, svgAttributes[attr]);\n    });\n    // Add custom styles\n    if (data.inline) {\n        svgStyle.verticalAlign = '-0.125em';\n    }\n    // Copy stuff from placeholder\n    if (placeholderElement) {\n        // Copy attributes\n        const placeholderAttributes = placeholderElement.attributes;\n        for (let i = 0; i < placeholderAttributes.length; i++) {\n            const item = placeholderAttributes.item(i);\n            if (item) {\n                const name = item.name;\n                if (name !== 'class' &&\n                    name !== 'style' &&\n                    svgAttributes[name] === void 0) {\n                    try {\n                        svg.setAttribute(name, item.value);\n                    }\n                    catch (err) {\n                        //\n                    }\n                }\n            }\n        }\n        // Copy styles\n        const placeholderStyle = placeholderElement.style;\n        for (let i = 0; i < placeholderStyle.length; i++) {\n            const attr = placeholderStyle[i];\n            svgStyle[attr] = placeholderStyle[attr];\n        }\n    }\n    // Store finder specific data\n    if (finder) {\n        const elementData = {\n            name: name,\n            status: 'loaded',\n            customisations: customisations,\n        };\n        svg[elementDataProperty] = elementData;\n        svg[elementFinderProperty] = finder;\n    }\n    // Get result\n    const result = returnString ? span.innerHTML : svg;\n    // Replace placeholder\n    if (placeholderElement && placeholderElement.parentNode) {\n        placeholderElement.parentNode.replaceChild(svg, placeholderElement);\n    }\n    else {\n        // Placeholder has no parent? Remove SVG parent as well\n        span.removeChild(svg);\n    }\n    // Return new node\n    return result;\n}\n\n/**\n * List of root nodes\n */\nlet nodes = [];\n/**\n * Find node\n */\nfunction findRootNode(node) {\n    for (let i = 0; i < nodes.length; i++) {\n        const item = nodes[i];\n        const root = typeof item.node === 'function' ? item.node() : item.node;\n        if (root === node) {\n            return item;\n        }\n    }\n}\n/**\n * Add extra root node\n */\nfunction addRootNode(root, autoRemove = false) {\n    let node = findRootNode(root);\n    if (node) {\n        // Node already exist: switch type if needed\n        if (node.temporary) {\n            node.temporary = autoRemove;\n        }\n        return node;\n    }\n    // Create item, add it to list, start observer\n    node = {\n        node: root,\n        temporary: autoRemove,\n    };\n    nodes.push(node);\n    return node;\n}\n/**\n * Add document.body node\n */\nfunction addBodyNode() {\n    if (document.documentElement) {\n        return addRootNode(document.documentElement);\n    }\n    nodes.push({\n        node: () => {\n            return document.documentElement;\n        },\n    });\n}\n/**\n * Remove root node\n */\nfunction removeRootNode(root) {\n    nodes = nodes.filter((node) => {\n        const element = typeof node.node === 'function' ? node.node() : node.node;\n        return root !== element;\n    });\n}\n/**\n * Get list of root nodes\n */\nfunction listRootNodes() {\n    return nodes;\n}\n\n/**\n * Execute function when DOM is ready\n */\nfunction onReady(callback) {\n    const doc = document;\n    if (doc.readyState === 'complete' ||\n        (doc.readyState !== 'loading' &&\n            !doc.documentElement.doScroll)) {\n        callback();\n    }\n    else {\n        doc.addEventListener('DOMContentLoaded', callback);\n        window.addEventListener('load', callback);\n    }\n}\n\n/**\n * Callback\n */\nlet callback = null;\n/**\n * Parameters for mutation observer\n */\nconst observerParams = {\n    childList: true,\n    subtree: true,\n    attributes: true,\n};\n/**\n * Queue DOM scan\n */\nfunction queueScan(node) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    if (!observer.pendingScan) {\n        observer.pendingScan = setTimeout(() => {\n            delete observer.pendingScan;\n            if (callback) {\n                callback(node);\n            }\n        });\n    }\n}\n/**\n * Check mutations for added nodes\n */\nfunction checkMutations(node, mutations) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    if (!observer.pendingScan) {\n        for (let i = 0; i < mutations.length; i++) {\n            const item = mutations[i];\n            if (\n            // Check for added nodes\n            (item.addedNodes && item.addedNodes.length > 0) ||\n                // Check for icon or placeholder with modified attributes\n                (item.type === 'attributes' &&\n                    item.target[elementFinderProperty] !==\n                        void 0)) {\n                if (!observer.paused) {\n                    queueScan(node);\n                }\n                return;\n            }\n        }\n    }\n}\n/**\n * Start/resume observer\n */\nfunction continueObserving(node, root) {\n    node.observer.instance.observe(root, observerParams);\n}\n/**\n * Start mutation observer\n */\nfunction startObserver(node) {\n    let observer = node.observer;\n    if (observer && observer.instance) {\n        // Already started\n        return;\n    }\n    const root = typeof node.node === 'function' ? node.node() : node.node;\n    if (!root) {\n        // document.body is not available yet\n        return;\n    }\n    if (!observer) {\n        observer = {\n            paused: 0,\n        };\n        node.observer = observer;\n    }\n    // Create new instance, observe\n    observer.instance = new MutationObserver(checkMutations.bind(null, node));\n    continueObserving(node, root);\n    // Scan immediately\n    if (!observer.paused) {\n        queueScan(node);\n    }\n}\n/**\n * Start all observers\n */\nfunction startObservers() {\n    listRootNodes().forEach(startObserver);\n}\n/**\n * Stop observer\n */\nfunction stopObserver(node) {\n    if (!node.observer) {\n        return;\n    }\n    const observer = node.observer;\n    // Stop scan\n    if (observer.pendingScan) {\n        clearTimeout(observer.pendingScan);\n        delete observer.pendingScan;\n    }\n    // Disconnect observer\n    if (observer.instance) {\n        observer.instance.disconnect();\n        delete observer.instance;\n    }\n}\n/**\n * Start observer when DOM is ready\n */\nfunction initObserver(cb) {\n    const isRestart = callback !== null;\n    if (callback !== cb) {\n        // Change callback and stop all pending observers\n        callback = cb;\n        if (isRestart) {\n            listRootNodes().forEach(stopObserver);\n        }\n    }\n    if (isRestart) {\n        // Restart instances\n        startObservers();\n        return;\n    }\n    // Start observers when document is ready\n    onReady(startObservers);\n}\n/**\n * Pause observing node\n */\nfunction pauseObservingNode(node) {\n    (node ? [node] : listRootNodes()).forEach((node) => {\n        if (!node.observer) {\n            node.observer = {\n                paused: 1,\n            };\n            return;\n        }\n        const observer = node.observer;\n        observer.paused++;\n        if (observer.paused > 1 || !observer.instance) {\n            return;\n        }\n        // Disconnect observer\n        const instance = observer.instance;\n        // checkMutations(node, instance.takeRecords());\n        instance.disconnect();\n    });\n}\n/**\n * Pause observer\n */\nfunction pauseObserver(root) {\n    if (root) {\n        const node = findRootNode(root);\n        if (node) {\n            pauseObservingNode(node);\n        }\n    }\n    else {\n        pauseObservingNode();\n    }\n}\n/**\n * Resume observer\n */\nfunction resumeObservingNode(observer) {\n    (observer ? [observer] : listRootNodes()).forEach((node) => {\n        if (!node.observer) {\n            // Start observer\n            startObserver(node);\n            return;\n        }\n        const observer = node.observer;\n        if (observer.paused) {\n            observer.paused--;\n            if (!observer.paused) {\n                // Start / resume\n                const root = typeof node.node === 'function' ? node.node() : node.node;\n                if (!root) {\n                    return;\n                }\n                else if (observer.instance) {\n                    continueObserving(node, root);\n                }\n                else {\n                    startObserver(node);\n                }\n            }\n        }\n    });\n}\n/**\n * Resume observer\n */\nfunction resumeObserver(root) {\n    if (root) {\n        const node = findRootNode(root);\n        if (node) {\n            resumeObservingNode(node);\n        }\n    }\n    else {\n        resumeObservingNode();\n    }\n}\n/**\n * Observe node\n */\nfunction observe(root, autoRemove = false) {\n    const node = addRootNode(root, autoRemove);\n    startObserver(node);\n    return node;\n}\n/**\n * Remove observed node\n */\nfunction stopObserving(root) {\n    const node = findRootNode(root);\n    if (node) {\n        stopObserver(node);\n        removeRootNode(root);\n    }\n}\n\n/**\n * List of modules\n */\nconst finders = [];\n/**\n * Add module\n */\nfunction addFinder(finder) {\n    if (finders.indexOf(finder) === -1) {\n        finders.push(finder);\n    }\n}\n/**\n * Clean icon name: convert from string if needed and validate\n */\nfunction cleanIconName(name) {\n    if (typeof name === 'string') {\n        name = stringToIcon(name);\n    }\n    return name === null || !validateIcon(name) ? null : name;\n}\n/**\n * Compare customisations. Returns true if identical\n */\nfunction compareCustomisations(list1, list2) {\n    const keys1 = Object.keys(list1);\n    const keys2 = Object.keys(list2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i++) {\n        const key = keys1[i];\n        if (list2[key] !== list1[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Find all placeholders\n */\nfunction findPlaceholders(root) {\n    const results = [];\n    finders.forEach((finder) => {\n        const elements = finder.find(root);\n        Array.prototype.forEach.call(elements, (item) => {\n            const element = item;\n            if (element[elementFinderProperty] !== void 0 &&\n                element[elementFinderProperty] !== finder) {\n                // Element is assigned to a different finder\n                return;\n            }\n            // Get icon name\n            const name = cleanIconName(finder.name(element));\n            if (name === null) {\n                // Invalid name - do not assign this finder to element\n                return;\n            }\n            // Assign finder to element and add it to results\n            element[elementFinderProperty] = finder;\n            const placeholder = {\n                element,\n                finder,\n                name,\n            };\n            results.push(placeholder);\n        });\n    });\n    // Find all modified SVG\n    const elements = root.querySelectorAll('svg.iconify');\n    Array.prototype.forEach.call(elements, (item) => {\n        const element = item;\n        const finder = element[elementFinderProperty];\n        const data = element[elementDataProperty];\n        if (!finder || !data) {\n            return;\n        }\n        // Get icon name\n        const name = cleanIconName(finder.name(element));\n        if (name === null) {\n            // Invalid name\n            return;\n        }\n        let updated = false;\n        let customisations;\n        if (name.prefix !== data.name.prefix || name.name !== data.name.name) {\n            updated = true;\n        }\n        else {\n            customisations = finder.customisations(element);\n            if (!compareCustomisations(data.customisations, customisations)) {\n                updated = true;\n            }\n        }\n        // Add item to results\n        if (updated) {\n            const placeholder = {\n                element,\n                finder,\n                name,\n                customisations,\n            };\n            results.push(placeholder);\n        }\n    });\n    return results;\n}\n\n/**\n * Flag to avoid scanning DOM too often\n */\nlet scanQueued = false;\n/**\n * Icons have been loaded\n */\nfunction checkPendingIcons() {\n    if (!scanQueued) {\n        scanQueued = true;\n        setTimeout(() => {\n            if (scanQueued) {\n                scanQueued = false;\n                scanDOM();\n            }\n        });\n    }\n}\n/**\n * Compare Icon objects. Returns true if icons are identical.\n *\n * Note: null means icon is invalid, so null to null comparison = false.\n */\nconst compareIcons = (icon1, icon2) => {\n    return (icon1 !== null &&\n        icon2 !== null &&\n        icon1.name === icon2.name &&\n        icon1.prefix === icon2.prefix);\n};\n/**\n * Scan node for placeholders\n */\nfunction scanElement(root) {\n    // Add temporary node\n    const node = findRootNode(root);\n    if (!node) {\n        scanDOM({\n            node: root,\n            temporary: true,\n        }, true);\n    }\n    else {\n        scanDOM(node);\n    }\n}\n/**\n * Scan DOM for placeholders\n */\nfunction scanDOM(node, addTempNode = false) {\n    scanQueued = false;\n    // List of icons to load: [provider][prefix][name] = boolean\n    const iconsToLoad = Object.create(null);\n    // Get placeholders\n    (node ? [node] : listRootNodes()).forEach((node) => {\n        const root = typeof node.node === 'function' ? node.node() : node.node;\n        if (!root || !root.querySelectorAll) {\n            return;\n        }\n        // Track placeholders\n        let hasPlaceholders = false;\n        // Observer\n        let paused = false;\n        // Find placeholders\n        findPlaceholders(root).forEach((item) => {\n            const element = item.element;\n            const iconName = item.name;\n            const provider = iconName.provider;\n            const prefix = iconName.prefix;\n            const name = iconName.name;\n            let data = element[elementDataProperty];\n            // Icon has not been updated since last scan\n            if (data !== void 0 && compareIcons(data.name, iconName)) {\n                // Icon name was not changed and data is set - quickly return if icon is missing or still loading\n                switch (data.status) {\n                    case 'missing':\n                        return;\n                    case 'loading':\n                        if (isPending({\n                            provider,\n                            prefix,\n                            name,\n                        })) {\n                            // Pending\n                            hasPlaceholders = true;\n                            return;\n                        }\n                }\n            }\n            // Check icon\n            const storage = getStorage(provider, prefix);\n            if (storage.icons[name] !== void 0) {\n                // Icon exists - pause observer before replacing placeholder\n                if (!paused && node.observer) {\n                    pauseObservingNode(node);\n                    paused = true;\n                }\n                // Get customisations\n                const customisations = item.customisations !== void 0\n                    ? item.customisations\n                    : item.finder.customisations(element);\n                // Render icon\n                renderIconInPlaceholder(item, customisations, getIconFromStorage(storage, name));\n                return;\n            }\n            if (storage.missing[name]) {\n                // Mark as missing\n                data = {\n                    name: iconName,\n                    status: 'missing',\n                    customisations: {},\n                };\n                element[elementDataProperty] = data;\n                return;\n            }\n            if (!isPending({ provider, prefix, name })) {\n                // Add icon to loading queue\n                if (iconsToLoad[provider] === void 0) {\n                    iconsToLoad[provider] = Object.create(null);\n                }\n                const providerIconsToLoad = iconsToLoad[provider];\n                if (providerIconsToLoad[prefix] === void 0) {\n                    providerIconsToLoad[prefix] = Object.create(null);\n                }\n                providerIconsToLoad[prefix][name] = true;\n            }\n            // Mark as loading\n            data = {\n                name: iconName,\n                status: 'loading',\n                customisations: {},\n            };\n            element[elementDataProperty] = data;\n            hasPlaceholders = true;\n        });\n        // Node stuff\n        if (node.temporary && !hasPlaceholders) {\n            // Remove temporary node\n            stopObserving(root);\n        }\n        else if (addTempNode && hasPlaceholders) {\n            // Add new temporary node\n            observe(root, true);\n        }\n        else if (paused && node.observer) {\n            // Resume observer\n            resumeObservingNode(node);\n        }\n    });\n    // Load icons\n    Object.keys(iconsToLoad).forEach((provider) => {\n        const providerIconsToLoad = iconsToLoad[provider];\n        Object.keys(providerIconsToLoad).forEach((prefix) => {\n            loadIcons(Object.keys(providerIconsToLoad[prefix]).map((name) => {\n                const icon = {\n                    provider,\n                    prefix,\n                    name,\n                };\n                return icon;\n            }), checkPendingIcons);\n        });\n    });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n/**\n * Check if attribute exists\n */\nfunction hasAttribute(element, key) {\n    return element.hasAttribute(key);\n}\n/**\n * Get attribute value\n */\nfunction getAttribute(element, key) {\n    return element.getAttribute(key);\n}\n/**\n * Get attribute value\n */\nfunction getBooleanAttribute(element, key) {\n    const value = element.getAttribute(key);\n    if (value === key || value === 'true') {\n        return true;\n    }\n    if (value === '' || value === 'false') {\n        return false;\n    }\n    return null;\n}\n/**\n * Boolean attributes\n */\nconst booleanAttributes = [\n    'inline',\n    'hFlip',\n    'vFlip',\n];\n/**\n * String attributes\n */\nconst stringAttributes = [\n    'width',\n    'height',\n];\n/**\n * Class names\n */\nconst mainClass = 'iconify';\nconst inlineClass = 'iconify-inline';\n/**\n * Selector combining class names and tags\n */\nconst selector = 'i.' +\n    mainClass +\n    ', span.' +\n    mainClass +\n    ', i.' +\n    inlineClass +\n    ', span.' +\n    inlineClass;\n/**\n * Export finder for:\n *  <span class=\"iconify\" />\n *  <i class=\"iconify\" />\n *  <span class=\"iconify-inline\" />\n *  <i class=\"iconify-inline\" />\n */\nconst finder = {\n    /**\n     * Find all elements\n     */\n    find: (root) => root.querySelectorAll(selector),\n    /**\n     * Get icon name from element\n     */\n    name: (element) => {\n        if (hasAttribute(element, 'data-icon')) {\n            return getAttribute(element, 'data-icon');\n        }\n        return null;\n    },\n    /**\n     * Get customisations list from element\n     */\n    customisations: (element, defaultValues = {\n        inline: false,\n    }) => {\n        const result = defaultValues;\n        // Check class list for inline class\n        const className = element.getAttribute('class');\n        const classList = className ? className.split(/\\s+/) : [];\n        if (classList.indexOf(inlineClass) !== -1) {\n            result.inline = true;\n        }\n        // Rotation\n        if (hasAttribute(element, 'data-rotate')) {\n            const value = rotateFromString(getAttribute(element, 'data-rotate'));\n            if (value) {\n                result.rotate = value;\n            }\n        }\n        // Shorthand attributes\n        if (hasAttribute(element, 'data-flip')) {\n            flipFromString(result, getAttribute(element, 'data-flip'));\n        }\n        if (hasAttribute(element, 'data-align')) {\n            alignmentFromString(result, getAttribute(element, 'data-align'));\n        }\n        // Boolean attributes\n        booleanAttributes.forEach((attr) => {\n            if (hasAttribute(element, 'data-' + attr)) {\n                const value = getBooleanAttribute(element, 'data-' + attr);\n                if (typeof value === 'boolean') {\n                    result[attr] = value;\n                }\n            }\n        });\n        // String attributes\n        stringAttributes.forEach((attr) => {\n            if (hasAttribute(element, 'data-' + attr)) {\n                const value = getAttribute(element, 'data-' + attr);\n                if (value !== '') {\n                    result[attr] = value;\n                }\n            }\n        });\n        return result;\n    },\n    /**\n     * Filter classes\n     */\n    classFilter: (classList) => {\n        const result = [];\n        classList.forEach((className) => {\n            if (className !== 'iconify' &&\n                className !== '' &&\n                className.slice(0, 9) !== 'iconify--') {\n                result.push(className);\n            }\n        });\n        return result;\n    },\n};\n\n// import { finder as iconifyIconFinder } from './finders/iconify-icon';\n/**\n * Generate icon\n */\nfunction generateIcon(name, customisations, returnString) {\n    // Get icon data\n    const iconData = getIconData(name);\n    if (!iconData) {\n        return null;\n    }\n    // Split name\n    const iconName = stringToIcon(name);\n    // Clean up customisations\n    const changes = mergeCustomisations(defaults, typeof customisations === 'object' ? customisations : {});\n    // Get data\n    return renderIconInPlaceholder({\n        name: iconName,\n    }, changes, iconData, returnString);\n}\n/**\n * Get version\n */\nfunction getVersion() {\n    return '2.2.1';\n}\n/**\n * Generate SVG element\n */\nfunction renderSVG(name, customisations) {\n    return generateIcon(name, customisations, false);\n}\n/**\n * Generate SVG as string\n */\nfunction renderHTML(name, customisations) {\n    return generateIcon(name, customisations, true);\n}\n/**\n * Get rendered icon as object that can be used to create SVG (use replaceIDs on body)\n */\nfunction renderIcon(name, customisations) {\n    // Get icon data\n    const iconData = getIconData(name);\n    if (!iconData) {\n        return null;\n    }\n    // Clean up customisations\n    const changes = mergeCustomisations(defaults, typeof customisations === 'object' ? customisations : {});\n    // Get data\n    return iconToSVG(iconData, changes);\n}\n/**\n * Scan DOM\n */\nfunction scan(root) {\n    if (root) {\n        scanElement(root);\n    }\n    else {\n        scanDOM();\n    }\n}\n/**\n * Initialise stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Add document.body node\n    addBodyNode();\n    // Add finder modules\n    // addFinder(iconifyIconFinder);\n    addFinder(finder);\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Load observer and scan DOM on next tick\n    setTimeout(() => {\n        initObserver(scanDOM);\n        scanDOM();\n    });\n}\n\n/**\n * Enable cache\n */\nfunction enableCache(storage, enable) {\n    toggleBrowserCache(storage, enable !== false);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Initialise stuff\n */\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (const key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n    mergeParams,\n};\n/**\n * Global variable\n */\nconst Iconify = {\n    // IconifyAPIInternalFunctions\n    _api,\n    // IconifyAPIFunctions\n    addAPIProvider,\n    loadIcons,\n    loadIcon,\n    // IconifyStorageFunctions\n    iconExists,\n    getIcon,\n    listIcons,\n    addIcon,\n    addCollection,\n    shareStorage,\n    // IconifyBuilderFunctions\n    replaceIDs,\n    calculateSize,\n    buildIcon,\n    // IconifyCommonFunctions\n    getVersion,\n    renderSVG,\n    renderHTML,\n    renderIcon,\n    scan,\n    observe,\n    stopObserving,\n    pauseObserver,\n    resumeObserver,\n    // IconifyBrowserCacheFunctions\n    enableCache,\n    disableCache,\n};\n\nexport { _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, Iconify as default, disableCache, enableCache, getIcon, getVersion, iconExists, listIcons, loadIcon, loadIcons, observe, pauseObserver, renderHTML, renderIcon, renderSVG, replaceIDs, resumeObserver, scan, shareStorage, stopObserving };\n\n// Export to window or web worker\ntry {\n\tif (self.Iconify === void 0) {\n\t\tself.Iconify = Iconify;\n\t}\n} catch (err) {\n}\n","import \"../css/main.css\";\nimport '@iconify/iconify';\n\nimport zh from '../data/zh.json'\n\nconsole.log(zh)"],"names":["matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","getIconData$1","name","full","result","getIcon","name2","iteration","icons","assign","aliases","item","result2","parent","icon","alias","key","prop","value","mergeIconData","chars","parseIconSet","callback","options","names","not_found","Array","forEach","push","keys","iconData","parseAliases","isVariation","optionalProperties","provider","quicklyValidateIconSet","obj","prefix","match","body","stringToIcon","validate","allowSimpleName","colonSeparated","split","slice","length","shift","pop","validateIcon","dashSeparated","join","storage$1","create","w","window","self","_iconifyStorage","version","storage","err","getStorage","providerStorage","missing","newStorage","addIconSet","storage2","t","Date","now","getIconFromStorage","simpleNames","getIconData","addIcon","addIconToStorage","addCollection","added","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","attr","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","tempValue","rotation","toString","floor","unshift","attributes","viewBox","regex","randomPrefix","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","cacheVersion","cachePrefix","countKey","versionKey","hour","config","local","session","loaded","count","emptyList","_window","getGlobal","setCount","setItem","getCount","count2","getItem","parseInt","loadCache","minTime","load","func","index","valid","JSON","parse","cached","removeItem","total","i","destroyCache","initCache","storeCache","store","stringify","cache","toggleBrowserCache","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","getAPIConfig","concat","mergeParams","base","params","hasParams","indexOf","encodeURIComponent","Error","paramToString","maxLengthCache","pathCache","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","cacheKey","calculateMaxLength","type","send","getPath","iconsList","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","idCounter","defaultConfig","initRedundancy","cfg","newConfig","setConfig","queries","cleanup","instance","query","payload","queryCallback","doneCallback","query2","done","resourcesCount","startIndex","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","moduleResponse","queriesPending","sendQuery","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cachedReundancy","getRedundancyCache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","errorsCache","loadNewIcons","providerIconsToLoad","providerQueueFlags","providerPendingIcons","sort","icons2","parsed","pending","err2","console","providerLoaderFlags","providerPendingUpdates","hasPending","oldLength","updateCallbacks","loadedNewIcons","time","isPending","loadIcons","sortedIcons","a","b","localeCompare","lastIcon","localStorage","sortIcons","listToIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingSources","bind","storeCallback","elementFinderProperty","elementDataProperty","renderIconInPlaceholder","placeholder","returnString","span","document","createElement","placeholderElement","element","finder","placeholderClassName","getAttribute","filteredClassList","classFilter","html","innerHTML","svg","childNodes","svgStyle","style","svgAttributes","setAttribute","verticalAlign","placeholderAttributes","placeholderStyle","elementData","parentNode","replaceChild","removeChild","nodes","findRootNode","node","addRootNode","root","autoRemove","temporary","listRootNodes","observerParams","childList","subtree","queueScan","observer","pendingScan","checkMutations","mutations","addedNodes","paused","continueObserving","observe","startObserver","MutationObserver","startObservers","stopObserver","disconnect","pauseObservingNode","resumeObservingNode","stopObserving","removeRootNode","finders","cleanIconName","scanQueued","checkPendingIcons","scanDOM","addTempNode","querySelectorAll","hasPlaceholders","elements","prototype","call","updated","list1","list2","keys1","keys2","compareCustomisations","findPlaceholders","iconName","icon2","icon1","map","separator","hasAttribute","booleanAttributes","stringAttributes","defaultValues","className","defaultValue","units","value2","rotateFromString","custom","str","trim","align","alignmentFromString","getBooleanAttribute","classList","generateIcon","documentElement","addBodyNode","addFinder","IconifyPreload","preload","e","cb","isRestart","doc","readyState","doScroll","addEventListener","onReady","initObserver","IconifyProviders","providers","Iconify","_api","setFetch","fetch2","getFetch","listAPIProviders","loadIcon","Promise","fulfill","reject","iconObj","iconExists","listIcons","allIcons","provider2","prefixes","prefix2","shareStorage","buildIcon","getVersion","renderSVG","renderHTML","renderIcon","scan","scanElement","pauseObserver","resumeObserver","enableCache","enable","disableCache","log","zh"],"sourceRoot":""}